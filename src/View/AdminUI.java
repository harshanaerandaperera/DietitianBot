package View;

import View.*;
import Controller.DietMaths;
import Controller.SetOfMealPlans;
import Controller.SetOfUsers;
import Controller.Validator;
import Models.MealPlan;
import Models.User;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

//IT16083424 Perera P.A.H.E     SHU ID=27045240 
/**
 *
 * @author Harshana
 */
public class AdminUI extends javax.swing.JFrame implements Serializable {

    public Validator validator = new Validator();
    User currentUser;
    SetOfUsers users = new SetOfUsers();
    SetOfMealPlans mealPlans = new SetOfMealPlans();
    MealPlan currentMealPlan;
    DietMaths dm = new DietMaths();

    /**
     * Creates new form View
     */
    public AdminUI() {
        initComponents();
        DeserializeUsers();
        DeserializeMealPlans();
        populateUsersList();
        populateMealPlanList();
        populateMealPlanListTotblViewMealPlans();

    }

    public void populateUsersList() {
        DefaultTableModel dtm = (DefaultTableModel) tblUserMgt.getModel();
        dtm.setRowCount(0);
        for (User user : users) {
            Vector v = new Vector();
            v.add(user.getName());
            v.add(user.getEmail());
            v.add(user.getAge());
            v.add(user.getHeight());
            v.add(user.getWeight());
            v.add(user.getGender());

            dtm.addRow(v);
        }
    }

    public void populateMealPlanList() {
        DefaultTableModel dtm = (DefaultTableModel) tblManageMealPlans.getModel();
        dtm.setRowCount(0);
        for (MealPlan mealPlan : mealPlans) {
            Vector v = new Vector();
            v.add(mealPlan.getId());
            v.add(mealPlan.getName());
            v.add(mealPlan.getCalorieAmount());
            v.add(mealPlan.getBreakfast());
            v.add(mealPlan.getLunch());
            v.add(mealPlan.getDinner());
            v.add(mealPlan.getSnack());
            dtm.addRow(v);
        }
    }

    public void populateMealPlanListTotblViewMealPlans() {
        DefaultTableModel dtm = (DefaultTableModel) tblViewMealPlans.getModel();
        dtm.setRowCount(0);
        for (MealPlan mealPlan : mealPlans) {
            Vector v = new Vector();
            v.add(mealPlan.getId());
            v.add(mealPlan.getName());
            v.add(mealPlan.getCalorieAmount());
            v.add(mealPlan.getBreakfast());
            v.add(mealPlan.getLunch());
            v.add(mealPlan.getDinner());
            v.add(mealPlan.getSnack());
            dtm.addRow(v);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radGrpGender = new javax.swing.ButtonGroup();
        jTabbedPaneMainPanelAdmin = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblViewMealPlans = new javax.swing.JTable();
        jSeparator22 = new javax.swing.JSeparator();
        txtSearchMealView = new javax.swing.JTextField();
        btnSearchMealPlanView = new javax.swing.JButton();
        cmbSearchMealPlanInViewMealPlan = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtBreakfastviewMealPlan = new javax.swing.JTextArea();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtLunchViewMealPlan = new javax.swing.JTextArea();
        jLabel41 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtDinnerViewMealPlan = new javax.swing.JTextArea();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        txtSnackViewMealPlan = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jSeparator20 = new javax.swing.JSeparator();
        txtMealPlanName = new javax.swing.JTextField();
        jSeparator21 = new javax.swing.JSeparator();
        txtMealPlanCalorieAmount = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        btnAddMealPlan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtBreakfastManageMealPlan = new javax.swing.JTextArea();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLunchManageMealPlan = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtDinnerManageMealPlan = new javax.swing.JTextArea();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtSnackManageMealPlan = new javax.swing.JTextArea();
        jLabel38 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblManageMealPlans = new javax.swing.JTable();
        btnRemoveMealPlan = new javax.swing.JButton();
        jSeparator23 = new javax.swing.JSeparator();
        txtSearchMealManage = new javax.swing.JTextField();
        btnSearchManageMealPlan = new javax.swing.JButton();
        cmbSearchMealPlanInManage = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblUserMgt = new javax.swing.JTable();
        jSeparator24 = new javax.swing.JSeparator();
        txtSearchUser = new javax.swing.JTextField();
        btnSearchUser = new javax.swing.JButton();
        cmbSearchUser = new javax.swing.JComboBox<>();
        btnRemoveUser = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(32, 33, 35));
        setUndecorated(true);
        setResizable(false);

        jTabbedPaneMainPanelAdmin.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jTabbedPaneMainPanelAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPaneMainPanelAdminMouseClicked(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(32, 33, 35));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        jPanel11.setBackground(new java.awt.Color(32, 33, 35));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblViewMealPlans.setBackground(new java.awt.Color(32, 33, 35));
        tblViewMealPlans.setForeground(new java.awt.Color(255, 255, 255));
        tblViewMealPlans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MPID", "Meal Plan Name", "Total Calories", "Breakfast", "Lunch", "Dinner", "Snack"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewMealPlans.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewMealPlansMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblViewMealPlans);

        jPanel11.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1180, 200));

        jSeparator22.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator22.setForeground(new java.awt.Color(255, 255, 255));
        jPanel11.add(jSeparator22, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 160, 10));

        txtSearchMealView.setBackground(new java.awt.Color(32, 33, 35));
        txtSearchMealView.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtSearchMealView.setForeground(new java.awt.Color(255, 255, 255));
        txtSearchMealView.setBorder(null);
        jPanel11.add(txtSearchMealView, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 160, 20));

        btnSearchMealPlanView.setBackground(new java.awt.Color(38, 50, 56));
        btnSearchMealPlanView.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnSearchMealPlanView.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchMealPlanView.setText("Search Meal Plan");
        btnSearchMealPlanView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMealPlanViewActionPerformed(evt);
            }
        });
        jPanel11.add(btnSearchMealPlanView, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 180, -1));

        cmbSearchMealPlanInViewMealPlan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Option to Search", "Search By Meal Plan Name", "Search By Calorie Amount" }));
        cmbSearchMealPlanInViewMealPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchMealPlanInViewMealPlanActionPerformed(evt);
            }
        });
        jPanel11.add(cmbSearchMealPlanInViewMealPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtBreakfastviewMealPlan.setEditable(false);
        txtBreakfastviewMealPlan.setColumns(20);
        txtBreakfastviewMealPlan.setRows(5);
        txtBreakfastviewMealPlan.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane3.setViewportView(txtBreakfastviewMealPlan);

        jPanel11.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 270, 150));

        jLabel39.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Breakfast:");
        jPanel11.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 80, -1));

        jLabel40.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Lunch:");
        jPanel11.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, 80, -1));

        txtLunchViewMealPlan.setEditable(false);
        txtLunchViewMealPlan.setColumns(20);
        txtLunchViewMealPlan.setRows(5);
        jScrollPane4.setViewportView(txtLunchViewMealPlan);

        jPanel11.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 340, 280, 150));

        jLabel41.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("Dinner:");
        jPanel11.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 320, 80, -1));

        txtDinnerViewMealPlan.setEditable(false);
        txtDinnerViewMealPlan.setColumns(20);
        txtDinnerViewMealPlan.setRows(5);
        jScrollPane11.setViewportView(txtDinnerViewMealPlan);

        jPanel11.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 340, 280, 150));

        jLabel42.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Snack:");
        jPanel11.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 320, 80, -1));

        txtSnackViewMealPlan.setEditable(false);
        txtSnackViewMealPlan.setColumns(20);
        txtSnackViewMealPlan.setRows(5);
        jScrollPane12.setViewportView(txtSnackViewMealPlan);

        jPanel11.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 340, 270, 150));

        jTabbedPane5.addTab("                                             View Meal Plans                                          ", jPanel11);

        jPanel5.setBackground(new java.awt.Color(32, 33, 35));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator20.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator20.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.add(jSeparator20, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 160, 10));

        txtMealPlanName.setBackground(new java.awt.Color(32, 33, 35));
        txtMealPlanName.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtMealPlanName.setForeground(new java.awt.Color(255, 255, 255));
        txtMealPlanName.setBorder(null);
        jPanel5.add(txtMealPlanName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 160, 20));

        jSeparator21.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator21.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.add(jSeparator21, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 170, 10));

        txtMealPlanCalorieAmount.setBackground(new java.awt.Color(32, 33, 35));
        txtMealPlanCalorieAmount.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtMealPlanCalorieAmount.setForeground(new java.awt.Color(255, 255, 255));
        txtMealPlanCalorieAmount.setBorder(null);
        jPanel5.add(txtMealPlanCalorieAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 170, -1));

        jLabel30.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Total Calorie Amount:");
        jPanel5.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 150, -1));

        jLabel34.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Breakfast:");
        jPanel5.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 80, -1));

        btnAddMealPlan.setBackground(new java.awt.Color(38, 50, 56));
        btnAddMealPlan.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnAddMealPlan.setForeground(new java.awt.Color(255, 255, 255));
        btnAddMealPlan.setText("Add Meal Plan");
        btnAddMealPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMealPlanActionPerformed(evt);
            }
        });
        jPanel5.add(btnAddMealPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 130, 140, -1));

        txtBreakfastManageMealPlan.setColumns(20);
        txtBreakfastManageMealPlan.setRows(5);
        jScrollPane1.setViewportView(txtBreakfastManageMealPlan);

        jPanel5.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 240, 150));

        jLabel35.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Meal Plan Name:");
        jPanel5.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 120, -1));

        jLabel36.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Lunch:");
        jPanel5.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 80, -1));

        txtLunchManageMealPlan.setColumns(20);
        txtLunchManageMealPlan.setRows(5);
        jScrollPane2.setViewportView(txtLunchManageMealPlan);

        jPanel5.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 240, 150));

        txtDinnerManageMealPlan.setColumns(20);
        txtDinnerManageMealPlan.setRows(5);
        jScrollPane7.setViewportView(txtDinnerManageMealPlan);

        jPanel5.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, 240, 150));

        jLabel37.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Dinner:");
        jPanel5.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 60, 80, -1));

        txtSnackManageMealPlan.setColumns(20);
        txtSnackManageMealPlan.setRows(5);
        jScrollPane8.setViewportView(txtSnackManageMealPlan);

        jPanel5.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 80, 240, 150));

        jLabel38.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Snack:");
        jPanel5.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 60, 80, -1));

        tblManageMealPlans.setBackground(new java.awt.Color(32, 33, 35));
        tblManageMealPlans.setForeground(new java.awt.Color(255, 255, 255));
        tblManageMealPlans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MPID", "Meal Plan Name", "Total Calories", "Breakfast", "Lunch", "Dinner", "Snack"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblManageMealPlans);

        jPanel5.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 1180, 190));

        btnRemoveMealPlan.setBackground(new java.awt.Color(38, 50, 56));
        btnRemoveMealPlan.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnRemoveMealPlan.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveMealPlan.setText("Remove Meal Plan");
        btnRemoveMealPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveMealPlanActionPerformed(evt);
            }
        });
        jPanel5.add(btnRemoveMealPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 460, 190, -1));

        jSeparator23.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator23.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.add(jSeparator23, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 490, 160, 10));

        txtSearchMealManage.setBackground(new java.awt.Color(32, 33, 35));
        txtSearchMealManage.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtSearchMealManage.setForeground(new java.awt.Color(255, 255, 255));
        txtSearchMealManage.setBorder(null);
        jPanel5.add(txtSearchMealManage, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 470, 160, 20));

        btnSearchManageMealPlan.setBackground(new java.awt.Color(38, 50, 56));
        btnSearchManageMealPlan.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnSearchManageMealPlan.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchManageMealPlan.setText("Search Meal Plan");
        btnSearchManageMealPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchManageMealPlanActionPerformed(evt);
            }
        });
        jPanel5.add(btnSearchManageMealPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 460, 180, -1));

        cmbSearchMealPlanInManage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Option to Search", "Search By Meal Plan Name", "Search By Calorie Amount" }));
        cmbSearchMealPlanInManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchMealPlanInManageActionPerformed(evt);
            }
        });
        jPanel5.add(cmbSearchMealPlanInManage, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, -1, -1));

        jTabbedPane5.addTab("                                         Manage Meal Plans                                         ", jPanel5);

        jPanel3.add(jTabbedPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 550));

        jTabbedPaneMainPanelAdmin.addTab("                          Meal Plan Management                            ", jPanel3);

        jPanel1.setBackground(new java.awt.Color(32, 33, 35));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblUserMgt.setBackground(new java.awt.Color(32, 33, 35));
        tblUserMgt.setForeground(new java.awt.Color(255, 255, 255));
        tblUserMgt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Email", "Age", "Height", "Weight", "Gender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tblUserMgt);

        jPanel1.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 1180, 390));

        jSeparator24.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator24.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator24, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 160, 10));

        txtSearchUser.setBackground(new java.awt.Color(32, 33, 35));
        txtSearchUser.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtSearchUser.setForeground(new java.awt.Color(255, 255, 255));
        txtSearchUser.setBorder(null);
        jPanel1.add(txtSearchUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 160, 20));

        btnSearchUser.setBackground(new java.awt.Color(38, 50, 56));
        btnSearchUser.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnSearchUser.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchUser.setText("Search User");
        btnSearchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchUserActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearchUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 180, -1));

        cmbSearchUser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Option to Search", "Search By Name", "Search By Email" }));
        cmbSearchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchUserActionPerformed(evt);
            }
        });
        jPanel1.add(cmbSearchUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        btnRemoveUser.setBackground(new java.awt.Color(38, 50, 56));
        btnRemoveUser.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnRemoveUser.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveUser.setText("Remove User");
        btnRemoveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveUserActionPerformed(evt);
            }
        });
        jPanel1.add(btnRemoveUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 480, 190, -1));

        jTabbedPaneMainPanelAdmin.addTab("                   User Management                   ", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1220, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        jTabbedPaneMainPanelAdmin.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Images/SignOut.png")), jPanel2); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMainPanelAdmin)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPaneMainPanelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jTabbedPaneMainPanelAdmin.getAccessibleContext().setAccessibleName("     Me     ");

        setSize(new java.awt.Dimension(1222, 585));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMealPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMealPlanActionPerformed

        String mealPlanName = txtMealPlanName.getText();
        int totalCalorieAmount = Integer.parseInt(txtMealPlanCalorieAmount.getText());
        String breakfast = txtBreakfastManageMealPlan.getText();
        String lunch = txtLunchManageMealPlan.getText();
        String dinner = txtDinnerManageMealPlan.getText();
        String snack = txtSnackManageMealPlan.getText();
        String nutrition = dm.MNUTRIENT(totalCalorieAmount);

        currentMealPlan = new MealPlan(mealPlanName, totalCalorieAmount, breakfast, lunch, dinner, snack, nutrition);
        mealPlans.addMealPlan(currentMealPlan);
        clearText();
        populateMealPlanList();
        populateMealPlanListTotblViewMealPlans();
    }//GEN-LAST:event_btnAddMealPlanActionPerformed

    public void clearText() {
        txtSearchMealManage.setText("");
        txtSearchMealView.setText("");
        txtBreakfastviewMealPlan.setText("");
        txtLunchViewMealPlan.setText("");
        txtDinnerViewMealPlan.setText("");
        txtSnackViewMealPlan.setText("");
        txtMealPlanName.setText("");
        txtMealPlanCalorieAmount.setText("");
        txtBreakfastManageMealPlan.setText("");
        txtLunchManageMealPlan.setText("");
        txtDinnerManageMealPlan.setText("");
        txtSnackManageMealPlan.setText("");
    }

    private void btnRemoveMealPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveMealPlanActionPerformed
        int selectedRow = tblManageMealPlans.getSelectedRow();
        if (selectedRow != -1) {
            int yesNo = JOptionPane.showConfirmDialog(null, "Do you really want to remove Meal Plan?", " Remove Meal Plan ", JOptionPane.YES_NO_OPTION);
            if (yesNo == 0) {
                DefaultTableModel d = (DefaultTableModel) tblManageMealPlans.getModel();
                int MPID = Integer.parseInt(d.getValueAt(selectedRow, 0).toString());
                System.out.println("MPLID   " + MPID);
                currentMealPlan = mealPlans.getMealPlanById(MPID);
                mealPlans.removeMealPlan(currentMealPlan);
                populateMealPlanList();
                populateMealPlanListTotblViewMealPlans();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a Meal Plan First to remove !", " Remove Meal Plan ", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnRemoveMealPlanActionPerformed

    private void btnSearchMealPlanViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMealPlanViewActionPerformed
        String searchKey = txtSearchMealView.getText();
        if (cmbSearchMealPlanInViewMealPlan.getSelectedIndex() == 0) {
            populateMealPlanListTotblViewMealPlans();
        }
        if (cmbSearchMealPlanInViewMealPlan.getSelectedIndex() == 1) {

            if (!searchKey.isEmpty()) {

                DefaultTableModel dtm = (DefaultTableModel) tblViewMealPlans.getModel();
                dtm.setRowCount(0);
                for (int i = 0; i < mealPlans.getMealPlanByName(searchKey).size(); i++) {
                    MealPlan mealPlan = mealPlans.getMealPlanByName(searchKey).get(i);
                    Vector v = new Vector();
                    v.add(mealPlan.getId());
                    v.add(mealPlan.getName());
                    v.add(mealPlan.getCalorieAmount());
                    v.add(mealPlan.getBreakfast());
                    v.add(mealPlan.getLunch());
                    v.add(mealPlan.getDinner());
                    v.add(mealPlan.getSnack());
                    dtm.addRow(v);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Invalid MealPlan Name, Please Re-Enter MealPlan Name !", " MealPlan Name ", JOptionPane.ERROR_MESSAGE);
            }

        }
        if (cmbSearchMealPlanInViewMealPlan.getSelectedIndex() == 2) {

            if (validator.isValidNumber(searchKey)) {

                DefaultTableModel dtm = (DefaultTableModel) tblViewMealPlans.getModel();
                dtm.setRowCount(0);
                for (int i = 0; i < mealPlans.getMealPlanBycalorieAmount(Double.parseDouble(searchKey)).size(); i++) {
                    MealPlan mealPlan = mealPlans.getMealPlanBycalorieAmount(Double.parseDouble(searchKey)).get(i);
                    Vector v = new Vector();
                    v.add(mealPlan.getId());
                    v.add(mealPlan.getName());
                    v.add(mealPlan.getCalorieAmount());
                    v.add(mealPlan.getBreakfast());
                    v.add(mealPlan.getLunch());
                    v.add(mealPlan.getDinner());
                    v.add(mealPlan.getSnack());
                    dtm.addRow(v);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Invalid Calorie Amount, Please Re-Enter Calorie Amount !", " Calorie Amount ", JOptionPane.ERROR_MESSAGE);
            }

        }

                 }//GEN-LAST:event_btnSearchMealPlanViewActionPerformed

    private void btnSearchManageMealPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchManageMealPlanActionPerformed

        String searchKey = txtSearchMealManage.getText();
        if (cmbSearchMealPlanInManage.getSelectedIndex() == 0) {
            populateMealPlanList();
        }
        if (cmbSearchMealPlanInManage.getSelectedIndex() == 1) {

            if (!searchKey.isEmpty()) {
                DefaultTableModel dtm = (DefaultTableModel) tblManageMealPlans.getModel();
                dtm.setRowCount(0);
                for (int i = 0; i < mealPlans.getMealPlanByName(searchKey).size(); i++) {
                    MealPlan mealPlan = mealPlans.getMealPlanByName(searchKey).get(i);
                    Vector v = new Vector();
                    v.add(mealPlan.getId());
                    v.add(mealPlan.getName());
                    v.add(mealPlan.getCalorieAmount());
                    v.add(mealPlan.getBreakfast());
                    v.add(mealPlan.getLunch());
                    v.add(mealPlan.getDinner());
                    v.add(mealPlan.getSnack());
                    dtm.addRow(v);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Invalid MealPlan Name, Please Re-Enter MealPlan Name !", " MealPlan Name ", JOptionPane.ERROR_MESSAGE);
            }

        }
        if (cmbSearchMealPlanInManage.getSelectedIndex() == 2) {

            if (validator.isValidNumber(searchKey)) {
                DefaultTableModel dtm = (DefaultTableModel) tblManageMealPlans.getModel();
                dtm.setRowCount(0);
                for (int i = 0; i < mealPlans.getMealPlanBycalorieAmount(Double.parseDouble(searchKey)).size(); i++) {
                    MealPlan mealPlan = mealPlans.getMealPlanBycalorieAmount(Double.parseDouble(searchKey)).get(i);
                    Vector v = new Vector();
                    v.add(mealPlan.getId());
                    v.add(mealPlan.getName());
                    v.add(mealPlan.getCalorieAmount());
                    v.add(mealPlan.getBreakfast());
                    v.add(mealPlan.getLunch());
                    v.add(mealPlan.getDinner());
                    v.add(mealPlan.getSnack());
                    dtm.addRow(v);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Invalid Calorie Amount, Please Re-Enter Calorie Amount !", " Calorie Amount ", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSearchManageMealPlanActionPerformed


    private void btnSearchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchUserActionPerformed
        String searchKey = txtSearchUser.getText();

        if (cmbSearchUser.getSelectedIndex() == 0) {
            populateUsersList();
        }
        if (cmbSearchUser.getSelectedIndex() == 1) {

            if (!searchKey.isEmpty()) {
                DefaultTableModel dtm = (DefaultTableModel) tblUserMgt.getModel();
                dtm.setRowCount(0);
                for (int i = 0; i < users.getUserByName(searchKey).size(); i++) {
                    User user = users.getUserByName(searchKey).get(i);
                    Vector v = new Vector();
                    v.add(user.getName());
                    v.add(user.getEmail());
                    v.add(user.getAge());
                    v.add(user.getHeight());
                    v.add(user.getWeight());
                    v.add(user.getGender());
                    dtm.addRow(v);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Invalid User Name, Please Re-Enter User Name !", " User Name ", JOptionPane.ERROR_MESSAGE);
            }
        }

        if (cmbSearchUser.getSelectedIndex() == 2) {
            if (validator.isValidEmail(searchKey)) {
                DefaultTableModel dtm = (DefaultTableModel) tblUserMgt.getModel();
                dtm.setRowCount(0);
                Vector v = new Vector();
                v.add(users.getUserByEmail(searchKey).getName());
                v.add(users.getUserByEmail(searchKey).getEmail());
                v.add(users.getUserByEmail(searchKey).getAge());
                v.add(users.getUserByEmail(searchKey).getHeight());
                v.add(users.getUserByEmail(searchKey).getWeight());
                v.add(users.getUserByEmail(searchKey).getGender());
                dtm.addRow(v);
            } else {
                JOptionPane.showMessageDialog(null, "Invalid Email, Please Re-Enter Email !", " Email ", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSearchUserActionPerformed

    private void btnRemoveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveUserActionPerformed
        int selectedRow = tblUserMgt.getSelectedRow();
        if (selectedRow != -1) {
            int yesNo = JOptionPane.showConfirmDialog(null, "Do you really want to remove User?", " Remove User ", JOptionPane.YES_NO_OPTION);
            if (yesNo == 0) {
                DefaultTableModel d = (DefaultTableModel) tblUserMgt.getModel();
                String email = d.getValueAt(selectedRow, 1).toString();
                currentUser = users.getUserByEmail(email);
                users.removeUser(currentUser);
                populateUsersList();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a user First to remove !", " Remove User ", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnRemoveUserActionPerformed

    private void tblViewMealPlansMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewMealPlansMouseClicked

        int selectedRow = tblViewMealPlans.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel d = (DefaultTableModel) tblViewMealPlans.getModel();
            int id = Integer.parseInt(d.getValueAt(selectedRow, 0).toString());
            currentMealPlan = mealPlans.getMealPlanById(id);
            txtBreakfastviewMealPlan.setText(currentMealPlan.getBreakfast());
            txtLunchViewMealPlan.setText(currentMealPlan.getLunch());
            txtDinnerViewMealPlan.setText(currentMealPlan.getDinner());
            txtSnackViewMealPlan.setText(currentMealPlan.getSnack());
        }
    }//GEN-LAST:event_tblViewMealPlansMouseClicked

    private void jTabbedPaneMainPanelAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPaneMainPanelAdminMouseClicked
        switchTabs();
    }//GEN-LAST:event_jTabbedPaneMainPanelAdminMouseClicked

    private void cmbSearchMealPlanInViewMealPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchMealPlanInViewMealPlanActionPerformed
        if (cmbSearchMealPlanInViewMealPlan.getSelectedIndex() == 0) {
            populateMealPlanListTotblViewMealPlans();
            clearText();
        }
    }//GEN-LAST:event_cmbSearchMealPlanInViewMealPlanActionPerformed

    private void cmbSearchMealPlanInManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchMealPlanInManageActionPerformed
        if (cmbSearchMealPlanInManage.getSelectedIndex() == 0) {
            populateMealPlanList();
            clearText();
        }
    }//GEN-LAST:event_cmbSearchMealPlanInManageActionPerformed

    private void cmbSearchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchUserActionPerformed
        if (cmbSearchUser.getSelectedIndex() == 0) {
            populateUsersList();
            txtSearchUser.setText("");
        }
    }//GEN-LAST:event_cmbSearchUserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMealPlan;
    private javax.swing.JButton btnRemoveMealPlan;
    private javax.swing.JButton btnRemoveUser;
    private javax.swing.JButton btnSearchManageMealPlan;
    private javax.swing.JButton btnSearchMealPlanView;
    private javax.swing.JButton btnSearchUser;
    private javax.swing.JComboBox<String> cmbSearchMealPlanInManage;
    private javax.swing.JComboBox<String> cmbSearchMealPlanInViewMealPlan;
    private javax.swing.JComboBox<String> cmbSearchUser;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator22;
    private javax.swing.JSeparator jSeparator23;
    private javax.swing.JSeparator jSeparator24;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPaneMainPanelAdmin;
    private javax.swing.ButtonGroup radGrpGender;
    private javax.swing.JTable tblManageMealPlans;
    private javax.swing.JTable tblUserMgt;
    private javax.swing.JTable tblViewMealPlans;
    private javax.swing.JTextArea txtBreakfastManageMealPlan;
    private javax.swing.JTextArea txtBreakfastviewMealPlan;
    private javax.swing.JTextArea txtDinnerManageMealPlan;
    private javax.swing.JTextArea txtDinnerViewMealPlan;
    private javax.swing.JTextArea txtLunchManageMealPlan;
    private javax.swing.JTextArea txtLunchViewMealPlan;
    private javax.swing.JTextField txtMealPlanCalorieAmount;
    private javax.swing.JTextField txtMealPlanName;
    private javax.swing.JTextField txtSearchMealManage;
    private javax.swing.JTextField txtSearchMealView;
    private javax.swing.JTextField txtSearchUser;
    private javax.swing.JTextArea txtSnackManageMealPlan;
    private javax.swing.JTextArea txtSnackViewMealPlan;
    // End of variables declaration//GEN-END:variables

    /**
     * Serialize SetOfUsers
     */
    public void SerializeUser() {
        try {
            FileOutputStream ufos = new FileOutputStream(new File("datafiles/users.ser"));
            ObjectOutputStream uboos = new ObjectOutputStream(ufos);
            uboos.writeObject(users);
            uboos.flush();
            uboos.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * Deserialize SetOfUsers
     */
    public void DeserializeUsers() {
        ObjectInputStream uois = null;
        File file = new File("datafiles/users.ser");
        try {

            FileInputStream ufis = new FileInputStream(file);
            if (ufis.available() != 0) {
                uois = new ObjectInputStream(ufis);
                while (uois != null) {
                    users = (SetOfUsers) uois.readObject();
                    System.out.println(this.users.size());
                }
            }
        } catch (Exception e) {

        }
    }

    /**
     * SerializeMeal Plans
     */
    public void SerializeMealPlans() {
        try {
            FileOutputStream mplfos = new FileOutputStream(new File("datafiles/mealPlans.ser"));
            ObjectOutputStream mplboos = new ObjectOutputStream(mplfos);
            mplboos.writeObject(mealPlans);
            mplboos.flush();
            mplboos.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * Deserialize SetOfMealPlans
     */
    public void DeserializeMealPlans() {
        ObjectInputStream mplois = null;
        File file = new File("datafiles/mealPlans.ser");
        try {

            FileInputStream mplfis = new FileInputStream(file);
            if (mplfis.available() != 0) {
                mplois = new ObjectInputStream(mplfis);
                while (mplois != null) {
                    mealPlans = (SetOfMealPlans) mplois.readObject();
                    System.out.println(this.mealPlans.size());
                }
            }
        } catch (Exception e) {

        }
    }

    public void switchTabs() {

        int selectedIndex = jTabbedPaneMainPanelAdmin.getSelectedIndex();

        if (selectedIndex == 2) {
            int answer = JOptionPane.showConfirmDialog(null, "Do you really want to Exit?", " AI Dietitian ", JOptionPane.YES_NO_OPTION);

            if (answer == 0) {
                System.out.println("SerializeUser And MealPlans");
                SerializeUser();
                SerializeMealPlans();
                SignInUI SI = new SignInUI();
                SI.setVisible(true);
                this.dispose();
            }
            if (answer == 1) {
                jTabbedPaneMainPanelAdmin.setSelectedIndex(0);
            }
        }
    }

}
